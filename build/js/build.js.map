{"version":3,"file":"build.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,IAAI,GAAG,GAAG;AACjC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;;;;;;;;;;ACRA,YAAY,mBAAO,CAAC,4CAAU;AAC9B,YAAY,mBAAO,CAAC,sCAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,IAAI,GAAG,GAAG;AACjC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,mDAAmD,IAAI;AACvD;;;;;;UCxBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,gBAAgB,mBAAO,CAAC,kDAAiB;AACzC,YAAY,mBAAO,CAAC,8CAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,EAAE;AACF,6BAA6B,IAAI;AACjC,C","sources":["webpack://todolist/./src/js/modules/delete.js","webpack://todolist/./src/js/modules/get.js","webpack://todolist/./src/js/modules/posts.js","webpack://todolist/./src/js/modules/put.js","webpack://todolist/webpack/bootstrap","webpack://todolist/./src/js/index.js"],"sourcesContent":["module.exports = function(url, name) {\r\n\r\n    async function deleteAction(url, name) {\r\n        const id = await fetch(url)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                const filteredAction = data.filter(action => action.action === name)\r\n                return filteredAction[0].id;\r\n            });\r\n\r\n        await fetch(`${url}/${id}`, {\r\n            method: \"delete\"\r\n        })\r\n    }\r\n    \r\n    deleteAction(url, name)\r\n        .then(() => console.log(\"done\"))\r\n        .catch(() => console.log(\"server error\"))     \r\n}","module.exports = function(param, posts) {\r\n    fetch(param)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            data.forEach(post => {\r\n                posts(document.querySelector(\"#posts\"), post.action);\r\n            });\r\n    })\r\n}","const del = require(\"./delete\");\r\nconst put = require(\"./put\");\r\nconst DB_URL = \"http://localhost:3000/actions\";\r\n\r\nmodule.exports = function actions(parent, postText) {\r\n    const post = document.createElement(\"div\");\r\n    const complated = document.createElement(\"div\");\r\n    const change = document.createElement(\"div\");\r\n    const hr = document.createElement(\"hr\");\r\n        hr.setAttribute(\"class\", \"del-line\");\r\n    const inp = document.createElement(\"input\");\r\n        inp.setAttribute(\"type\", \"text\");\r\n        inp.setAttribute(\"class\", \"new-text\");\r\n    const doneBtn = document.createElement(\"button\");\r\n        doneBtn.innerText = \"Done\";\r\n    const editBtn = document.createElement(\"button\");\r\n        editBtn.innerText = \"Edit\";\r\n    const delBtn = document.createElement(\"button\");\r\n        delBtn.innerText = \"Delete\";\r\n\r\n    doneBtn.addEventListener(\"click\", () => {\r\n        hr.classList.toggle(\"active\");\r\n    })\r\n    editBtn.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        inp.focus();\r\n\r\n        inp.addEventListener(\"keydown\", (e) => {\r\n            if (e.key === \"Enter\") {\r\n                inp.blur();\r\n                put(DB_URL, postText, inp.value);\r\n            }\r\n        })\r\n    })\r\n    delBtn.addEventListener(\"click\", () => {\r\n        del(DB_URL, postText);\r\n    })\r\n\r\n    parent.append(post);\r\n    post.append(complated);\r\n    post.append(change);\r\n    complated.append(hr);\r\n    complated.append(inp);\r\n    change.append(doneBtn);\r\n    change.append(editBtn);\r\n    change.append(delBtn);\r\n\r\n    post.classList.add(\"post\");\r\n    complated.classList.add(\"complated\");\r\n    change.classList.add(\"change\");\r\n    doneBtn.classList.add(\"done\");\r\n    editBtn.classList.add(\"edit\");\r\n    delBtn.classList.add(\"del\");\r\n\r\n    inp.value = postText;\r\n}","module.exports = function(url, name, newText) {\r\n\r\n    async function changeAction(url, name, newText) {\r\n        const id = await fetch(url)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                const filteredAction = data.filter(action => action.action === name)\r\n                return filteredAction[0].id;\r\n            });\r\n\r\n        await fetch(`${url}/${id}`, {\r\n            method: \"put\",\r\n            headers: {\r\n                \"content-type\" : \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                action: newText\r\n            })\r\n        })\r\n    }\r\n    \r\n    changeAction(url, name, newText)\r\n        .then(() => console.log(\"done\"))\r\n        .catch((err) => console.log(`server error${err}`))     \r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const actions = require(\"./modules/posts\");\r\nconst get = require(\"./modules/get\");\r\n\r\nconst form = document.getElementById(\"form\");\r\nconst input = document.querySelector(\".input\");\r\n\r\nconst DB_URL = \"http://localhost:3000/actions\";\r\n\r\nform.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n\r\n    const inpVal = input.value.trim();\r\n\r\n    if (inpVal !== \"\") {\r\n        const formData = new FormData(form);\r\n        const data = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n        async function action(DB_URL, data) {\r\n            await fetch(DB_URL, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"content-type\" : \"application/json\"\r\n                },\r\n                body: data\r\n            })\r\n        }\r\n    \r\n        action(DB_URL, data)\r\n            .then(() => console.log(\"done\"))\r\n            .catch(() => console.log(\"server error\"))   \r\n    }\r\n})\r\n\r\ntry{\r\n    get(DB_URL, actions)\r\n} catch(err) {\r\n    console.log(`get error ${err}`);\r\n}"],"names":[],"sourceRoot":""}